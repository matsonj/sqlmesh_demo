MODEL (
  name stock_data_sqlmesh.incremental_stock_info,
  kind INCREMENTAL_BY_TIME_RANGE (
    time_column _dlt_load_time,
  ),
  grain (symbol),
);

SELECT
  CAST(address1 AS TEXT) AS address1,
  CAST(city AS TEXT) AS city,
  CAST(state AS TEXT) AS state,
  CAST(zip AS TEXT) AS zip,
  CAST(country AS TEXT) AS country,
  CAST(phone AS TEXT) AS phone,
  CAST(website AS TEXT) AS website,
  CAST(industry AS TEXT) AS industry,
  CAST(industry_key AS TEXT) AS industry_key,
  CAST(industry_disp AS TEXT) AS industry_disp,
  CAST(sector AS TEXT) AS sector,
  CAST(sector_key AS TEXT) AS sector_key,
  CAST(sector_disp AS TEXT) AS sector_disp,
  CAST(long_business_summary AS TEXT) AS long_business_summary,
  CAST(full_time_employees AS BIGINT) AS full_time_employees,
  CAST(audit_risk AS BIGINT) AS audit_risk,
  CAST(board_risk AS BIGINT) AS board_risk,
  CAST(compensation_risk AS BIGINT) AS compensation_risk,
  CAST(share_holder_rights_risk AS BIGINT) AS share_holder_rights_risk,
  CAST(overall_risk AS BIGINT) AS overall_risk,
  CAST(governance_epoch_date AS BIGINT) AS governance_epoch_date,
  CAST(compensation_as_of_epoch_date AS BIGINT) AS compensation_as_of_epoch_date,
  CAST(ir_website AS TEXT) AS ir_website,
  CAST(max_age AS BIGINT) AS max_age,
  CAST(price_hint AS BIGINT) AS price_hint,
  CAST(previous_close AS DOUBLE) AS previous_close,
  CAST(open AS DOUBLE) AS open,
  CAST(day_low AS DOUBLE) AS day_low,
  CAST(day_high AS DOUBLE) AS day_high,
  CAST(regular_market_previous_close AS DOUBLE) AS regular_market_previous_close,
  CAST(regular_market_open AS DOUBLE) AS regular_market_open,
  CAST(regular_market_day_low AS DOUBLE) AS regular_market_day_low,
  CAST(regular_market_day_high AS DOUBLE) AS regular_market_day_high,
  CAST(dividend_rate AS DOUBLE) AS dividend_rate,
  CAST(dividend_yield AS DOUBLE) AS dividend_yield,
  CAST(ex_dividend_date AS BIGINT) AS ex_dividend_date,
  CAST(payout_ratio AS DOUBLE) AS payout_ratio,
  CAST(five_year_avg_dividend_yield AS DOUBLE) AS five_year_avg_dividend_yield,
  CAST(beta AS DOUBLE) AS beta,
  CAST(trailing_pe AS DOUBLE) AS trailing_pe,
  CAST(forward_pe AS DOUBLE) AS forward_pe,
  CAST(volume AS BIGINT) AS volume,
  CAST(regular_market_volume AS BIGINT) AS regular_market_volume,
  CAST(average_volume AS BIGINT) AS average_volume,
  CAST(average_volume10days AS BIGINT) AS average_volume10days,
  CAST(average_daily_volume10_day AS BIGINT) AS average_daily_volume10_day,
  CAST(bid AS DOUBLE) AS bid,
  CAST(ask AS DOUBLE) AS ask,
  CAST(bid_size AS BIGINT) AS bid_size,
  CAST(ask_size AS BIGINT) AS ask_size,
  CAST(market_cap AS BIGINT) AS market_cap,
  CAST(fifty_two_week_low AS DOUBLE) AS fifty_two_week_low,
  CAST(fifty_two_week_high AS DOUBLE) AS fifty_two_week_high,
  CAST(price_to_sales_trailing12_months AS DOUBLE) AS price_to_sales_trailing12_months,
  CAST(fifty_day_average AS DOUBLE) AS fifty_day_average,
  CAST(two_hundred_day_average AS DOUBLE) AS two_hundred_day_average,
  CAST(trailing_annual_dividend_rate AS DOUBLE) AS trailing_annual_dividend_rate,
  CAST(trailing_annual_dividend_yield AS DOUBLE) AS trailing_annual_dividend_yield,
  CAST(currency AS TEXT) AS currency,
  CAST(enterprise_value AS BIGINT) AS enterprise_value,
  CAST(profit_margins AS DOUBLE) AS profit_margins,
  CAST(float_shares AS BIGINT) AS float_shares,
  CAST(shares_outstanding AS BIGINT) AS shares_outstanding,
  CAST(shares_short AS BIGINT) AS shares_short,
  CAST(shares_short_prior_month AS BIGINT) AS shares_short_prior_month,
  CAST(shares_short_previous_month_date AS BIGINT) AS shares_short_previous_month_date,
  CAST(date_short_interest AS BIGINT) AS date_short_interest,
  CAST(shares_percent_shares_out AS DOUBLE) AS shares_percent_shares_out,
  CAST(held_percent_insiders AS DOUBLE) AS held_percent_insiders,
  CAST(held_percent_institutions AS DOUBLE) AS held_percent_institutions,
  CAST(short_ratio AS DOUBLE) AS short_ratio,
  CAST(short_percent_of_float AS DOUBLE) AS short_percent_of_float,
  CAST(implied_shares_outstanding AS BIGINT) AS implied_shares_outstanding,
  CAST(book_value AS DOUBLE) AS book_value,
  CAST(price_to_book AS DOUBLE) AS price_to_book,
  CAST(last_fiscal_year_end AS BIGINT) AS last_fiscal_year_end,
  CAST(next_fiscal_year_end AS BIGINT) AS next_fiscal_year_end,
  CAST(most_recent_quarter AS BIGINT) AS most_recent_quarter,
  CAST(earnings_quarterly_growth AS DOUBLE) AS earnings_quarterly_growth,
  CAST(net_income_to_common AS BIGINT) AS net_income_to_common,
  CAST(trailing_eps AS DOUBLE) AS trailing_eps,
  CAST(forward_eps AS DOUBLE) AS forward_eps,
  CAST(last_split_factor AS TEXT) AS last_split_factor,
  CAST(last_split_date AS BIGINT) AS last_split_date,
  CAST(enterprise_to_revenue AS DOUBLE) AS enterprise_to_revenue,
  CAST(enterprise_to_ebitda AS DOUBLE) AS enterprise_to_ebitda,
  CAST(_52_week_change AS DOUBLE) AS _52_week_change,
  CAST(sand_p52_week_change AS DOUBLE) AS sand_p52_week_change,
  CAST(last_dividend_value AS DOUBLE) AS last_dividend_value,
  CAST(last_dividend_date AS BIGINT) AS last_dividend_date,
  CAST(exchange AS TEXT) AS exchange,
  CAST(quote_type AS TEXT) AS quote_type,
  CAST(symbol AS TEXT) AS symbol,
  CAST(underlying_symbol AS TEXT) AS underlying_symbol,
  CAST(short_name AS TEXT) AS short_name,
  CAST(long_name AS TEXT) AS long_name,
  CAST(first_trade_date_epoch_utc AS BIGINT) AS first_trade_date_epoch_utc,
  CAST(time_zone_full_name AS TEXT) AS time_zone_full_name,
  CAST(time_zone_short_name AS TEXT) AS time_zone_short_name,
  CAST(uuid AS TEXT) AS uuid,
  CAST(message_board_id AS TEXT) AS message_board_id,
  CAST(gmt_off_set_milliseconds AS BIGINT) AS gmt_off_set_milliseconds,
  CAST(current_price AS DOUBLE) AS current_price,
  CAST(target_high_price AS DOUBLE) AS target_high_price,
  CAST(target_low_price AS DOUBLE) AS target_low_price,
  CAST(target_mean_price AS DOUBLE) AS target_mean_price,
  CAST(target_median_price AS DOUBLE) AS target_median_price,
  CAST(recommendation_mean AS DOUBLE) AS recommendation_mean,
  CAST(recommendation_key AS TEXT) AS recommendation_key,
  CAST(number_of_analyst_opinions AS BIGINT) AS number_of_analyst_opinions,
  CAST(total_cash AS BIGINT) AS total_cash,
  CAST(total_cash_per_share AS DOUBLE) AS total_cash_per_share,
  CAST(ebitda AS BIGINT) AS ebitda,
  CAST(total_debt AS BIGINT) AS total_debt,
  CAST(quick_ratio AS DOUBLE) AS quick_ratio,
  CAST(current_ratio AS DOUBLE) AS current_ratio,
  CAST(total_revenue AS BIGINT) AS total_revenue,
  CAST(debt_to_equity AS DOUBLE) AS debt_to_equity,
  CAST(revenue_per_share AS DOUBLE) AS revenue_per_share,
  CAST(return_on_assets AS DOUBLE) AS return_on_assets,
  CAST(return_on_equity AS DOUBLE) AS return_on_equity,
  CAST(free_cashflow AS BIGINT) AS free_cashflow,
  CAST(operating_cashflow AS BIGINT) AS operating_cashflow,
  CAST(earnings_growth AS DOUBLE) AS earnings_growth,
  CAST(revenue_growth AS DOUBLE) AS revenue_growth,
  CAST(gross_margins AS DOUBLE) AS gross_margins,
  CAST(ebitda_margins AS DOUBLE) AS ebitda_margins,
  CAST(operating_margins AS DOUBLE) AS operating_margins,
  CAST(financial_currency AS TEXT) AS financial_currency,
  CAST(trailing_peg_ratio AS DOUBLE) AS trailing_peg_ratio,
  CAST(_dlt_load_id AS TEXT) AS _dlt_load_id,
  CAST(_dlt_id AS TEXT) AS _dlt_id,
  CAST(address2 AS TEXT) AS address2,
  TO_TIMESTAMP(CAST(_dlt_load_id AS DOUBLE)) as _dlt_load_time
FROM
  stock_data.stock_info
WHERE
  TO_TIMESTAMP(CAST(_dlt_load_id AS DOUBLE)) BETWEEN @start_ds AND @end_ds
